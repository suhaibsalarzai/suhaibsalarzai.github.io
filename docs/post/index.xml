<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Welcome to my website</title>
    <link>https://suhaibsalarzai.github.io/post/</link>
    <description>Recent content in Posts on Welcome to my website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 16 Apr 2021 19:20:53 +0500</lastBuildDate><atom:link href="https://suhaibsalarzai.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>64 Bit OS</title>
      <link>https://suhaibsalarzai.github.io/post/64-bit-os/</link>
      <pubDate>Fri, 16 Apr 2021 19:20:53 +0500</pubDate>
      
      <guid>https://suhaibsalarzai.github.io/post/64-bit-os/</guid>
      <description>Working and Development In this part we modified the already created 32 bit OS.
First we will be setting up stack which is crucial to allow us to link in with C code. After that we will switch OS to 64 bit mode.
 We will write C code to print any text to the screen. As I have printed SEECS created from special characters.  As stack stores functions and variable used in code, we will create stacks.</description>
    </item>
    
    <item>
      <title>32 BIT ARCHITECTURE</title>
      <link>https://suhaibsalarzai.github.io/post/32-bit-architecture/</link>
      <pubDate>Thu, 15 Apr 2021 22:08:41 +0500</pubDate>
      
      <guid>https://suhaibsalarzai.github.io/post/32-bit-architecture/</guid>
      <description>Working and Development OS is written in C also we need assembly for hardware code.
 Install Docker which allows us reproducable environment. Install Qemu which allows us to emulate OS   First we will work in 32 bit architecure.   Actual numbers don&amp;rsquo;t matter, just that it&amp;rsquo;s a number Ordered sub-list And another item.  We will be using vs code for development. Inside the header is magic data which is necessary so that the bootloader can understand that we have an OS that can be run.</description>
    </item>
    
  </channel>
</rss>
